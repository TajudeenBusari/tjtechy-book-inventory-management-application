#here we define the profile that the application will run on, when started
#for example, I don't want any data manipulation or application inserting
#data from the DbInitializer into the msql database
#on start, the spring boot will check this file and load the application specific profile that is active
#if you start the application, the active profile will be shown in the console
server:
  port: 8081
spring:
  profiles:
#    active: h2-database
    #active: mysql-database
    active: postgres-database
  application:
    name: tjtechy-inventory-management-sept2024
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

api:
  endpoint:
    base-url: /api/v1

Management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,beans,configprops,heapdump,httpexchanges,loggers,mappings,custom-beans,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
    env:
      show-values: always
    configprops:
      show-values: always
    #enable shutdown #you should not do this bcos someone may shut remotely shut down the app in the prod site
    #shutdown:
      #enabled: true

  info:
    build:
      enabled: true
    env:
      enabled: true
    git:
      enabled: true
      mode: full

    java:
      enabled: true
    os:
      enabled: true
  tracing:
    sampling:
      probability: 1 #only for demo purpose, change it back to 0.1 in production.

info:
  app:
    name: tjtechy-inventory-management-sept2024
    description: A web application that manages books their authors and users
    version: @project.version@ #retrieves project version from pom.xml
    author: Tajudeen Busari
    links:
      github: https://github.com/TajudeenBusari/tjtechy-book-inventory-management-application


#postgres


#exposure is done over http or jmx, http is the most popular